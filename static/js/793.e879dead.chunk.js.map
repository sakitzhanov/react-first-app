{"version":3,"file":"static/js/793.e879dead.chunk.js","mappings":"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","sources":["webpack://first-react-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://first-react-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first-react-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__5DxV2\",\"profilePhoto\":\"ProfileInfo_profilePhoto__XXaPD\"};","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ?\r\n                <div>\r\n                    <input onBlur={() => {\r\n                            setEditMode(false);\r\n                            props.updateStatus(status);\r\n                        }}\r\n                        onChange={onStatusChange}\r\n                        autoFocus\r\n                        value={status}\r\n                    />\r\n                </div>\r\n                :\r\n                <div>\r\n                    <span onDoubleClick={() => setEditMode(true)}>{status}</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\n\r\nimport classes from './ProfileInfo.module.css';\r\nimport blankPhoto from \"../../../assets/images/blank-photo.png\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (        \r\n        <div>\r\n            <div>\r\n                <img alt=\"profile-wallpaper\" width='100%' src='https://media.istockphoto.com/photos/round-podium-or-pedestal-with-blue-background-picture-id1226478932?b=1&k=20&m=1226478932&s=170667a&w=0&h=hXsvxQilNanpKx7QC_tIsFUOKPl8fdIDfJ_QSKXesGE=' />              \r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img alt=\"profilePhoto\" src={props.profile.photos.large || blankPhoto} className={classes.profilePhoto} />\r\n                {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n                Full name: {props.profile.fullName}\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__A65TP\",\"posts\":\"MyPosts_posts__xg55P\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__uLJfk\"};","import React from \"react\";\r\n\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (        \r\n        <div className={classes.item}>\r\n            <img width=\"50px\" src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__480.png\" />\r\n            Post â„–{props.postId}. {props.message}\r\n            <div>\r\n                <button>Like ({props.likesCount})</button>\r\n                <button>Dislike ({props.dislikesCount})</button>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    const postsElements = props.posts.map(p => <Post key={p.id} postId={p.id} message={p.message} likesCount={p.likesCount} dislikesCount={p.dislikesCount} />);\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData);\r\n    }\r\n\r\n    return (        \r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onSubmit} />\r\n            <div className={classes.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder=\"Enter text\"\r\n                    name=\"text\"\r\n                    component={Textarea}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'post'\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (post) => {\r\n            dispatch(addPostActionCreator(post));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nimport classes from './Profile.module.css';\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (        \r\n        <div>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport classes from './Profile.module.css';\r\n\r\nimport Profile from './Profile';\r\nimport { connect } from \"react-redux\";\r\nimport { getProfile, getStatus, updateStatus, savePhoto } from \"../../redux/profile-reducer\";\r\nimport withRouter from \"../functions/withRouter\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n\r\n            if (!userId) {\r\n                this.props.router.navigate('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    isOwner={!this.props.router.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    {...this.props}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","onDoubleClick","profile","Preloader","alt","width","src","className","classes","photos","large","blankPhoto","isOwner","type","target","files","length","savePhoto","fullName","ProfileStatusWithHooks","postId","message","likesCount","dislikesCount","maxLength10","maxLengthCreator","MyPosts","React","postsElements","posts","map","p","id","AddNewPostReduxForm","onSubmit","formData","addPost","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","connect","state","profilePage","newPostText","dispatch","post","addPostActionCreator","ProfileContainer","userId","this","router","params","navigate","getProfile","getStatus","refreshProfile","prevProps","prevState","compose","auth","withRouter"],"sourceRoot":""}